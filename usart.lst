C51 COMPILER V9.00   USART                                                                 11/24/2015 16:05:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN usart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Recoder\usart.c LARGE BROWSE INCDIR(.\Recoder) DEBUG OBJECTEXTEND PRINT(.\u
                    -sart.lst) TABS(2) OBJECT(usart.obj)

line level    source

   1          #include "usart.h"
   2          
   3          bit busy;
   4          
   5          /*----------------------------
   6          UART init
   7          ----------------------------*/
   8          void usart_init(void)
   9          {
  10   1      #if (PARITYBIT == NONE_PARITY)
  11   1        SCON = 0x50;            //8-bit variable UART
  12   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  17   1        AUXR = 0x40;                //???1?1T??
  18   1        TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  19   1        TH1 = TL1 = -(FOSC / 32 / BAUD); //Set auto-reload vaule
  20   1        TR1 = 1;                //Timer1 start run
  21   1        ES = 1;                 //Enable UART interrupt
  22   1        EA = 1;                 //Open master interrupt switch
  23   1      
  24   1        uart_printf("STC12C5A60S2\r\nUart Test !\r\n");
  25   1      }
  26          
  27          
  28          /*----------------------------
  29          UART interrupt service routine
  30          ----------------------------*/
  31          void Uart_Isr() interrupt 4 using 1
  32          {
  33   1        if (RI)
  34   1        {
  35   2          RI = 0;             //Clear receive interrupt flag
  36   2          //        P0 = SBUF;          //P0 show UART data
  37   2          //        bit9 = RB8;         //P2.2 show parity bit
  38   2        }
  39   1        if (TI)
  40   1        {
  41   2          TI = 0;             //Clear transmit interrupt flag
  42   2          busy = 0;           //Clear transmit busy flag
  43   2        }
  44   1      }
  45          
  46          /*----------------------------
  47          Send a byte data to UART
  48          Input: dat (data to be sent)
  49          Output:None
  50          ----------------------------*/
  51          void SendData(BYTE dat)
  52          {
  53   1        while (busy);           //Wait for the completion of the previous data is sent
  54   1        ACC = dat;              //Calculate the even parity bit P (PSW.0)
C51 COMPILER V9.00   USART                                                                 11/24/2015 16:05:31 PAGE 2   

  55   1        if (P)                  //Set the parity bit according to P
  56   1        {
  57   2      #if (PARITYBIT == ODD_PARITY)
                  TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                  TB8 = 1;            //Set parity bit to 1
              #endif
  62   2        }
  63   1        else
  64   1        {
  65   2      #if (PARITYBIT == ODD_PARITY)
                  TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                  TB8 = 0;            //Set parity bit to 0
              #endif
  70   2        }
  71   1        busy = 1;
  72   1        SBUF = ACC;             //Send data to UART buffer
  73   1      }
  74          
  75          /*----------------------------
  76          Send a string to UART
  77          Input: s (address of string)
  78          Output:None
  79          ----------------------------*/
  80          void SendString(char *s)
  81          {
  82   1        while (*s)              //Check the end of the string
  83   1        {
  84   2          SendData(*s++);     //Send current char and increment string ptr
  85   2        }
  86   1      }
  87          
  88          void uart_printf(const char *fmt, ...)
  89          {
  90   1        va_list ap;
  91   1        char xdata string[512];//??????RAM,?????RAM,????????RAM??(???1024)  
  92   1      
  93   1        va_start(ap, fmt);
  94   1        vsprintf(string, fmt, ap);//???????sprintf??,?????,??????,????  
  95   1        SendString(string);
  96   1        va_end(ap);
  97   1      }
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    188    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----     561
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
