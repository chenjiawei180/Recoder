C51 COMPILER V9.00   PCM1801                                                               11/24/2015 18:00:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PCM1801
OBJECT MODULE PLACED IN pcm1801.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Recoder\pcm1801.c LARGE BROWSE INCDIR(.\Recoder) DEBUG OBJECTEXTEND PRINT(.
                    -\pcm1801.lst) TABS(2) OBJECT(pcm1801.obj)

line level    source

   1          #include "pcm1801.h"
   2          #include "wch372.h"
   3          
   4          uint16_t val = 0;
   5          uint16_t value = 0;
   6          uint8_t spi_c = 0;
   7          
   8          void spi_isr() interrupt 9 using 1     //SPI interrupt routine 9 (004BH)
   9          {
  10   1        SPSTAT = SPIF | WCOL;       //clear SPI status
  11   1      
  12   1      #ifdef MASTER
  13   1        // SPISS = 1;                  //push high slave SS
  14   1        if (spi_c == 0) // 第一次读取数据
  15   1        {
  16   2          value |= SPDAT << 8;
  17   2      
  18   2          ch372_wr_cmd_port(CMD_WR_USB_DATA7);//单片机向ch372写入向usb写入数据的命令//
  19   2          ch372_wr_dat_port(2);//告诉pc数据长度//
  20   2          ch372_wr_dat_port(value >> 8);//pc机验证数据的正确性//
  21   2          ch372_wr_dat_port(value);
  22   2        }
  23   1      #else                           //for salve (receive SPI data from master and
                SPDAT = SPDAT;              //           send previous SPI data to master)
              #endif
  26   1      
  27   1        if (spi_c == 1)
  28   1        {
  29   2          value |= SPDAT;
  30   2          SPDAT = 0x55;
  31   2          spi_c = 0;  
  32   2          //ch372_wr_cmd_port(CMD_WR_USB_DATA7);//单片机向ch372写入向usb写入数据的命令//
  33   2          //ch372_wr_dat_port(2);//告诉pc数据长度//
  34   2          //ch372_wr_dat_port(value >> 8);//pc机验证数据的正确性//
  35   2          //ch372_wr_dat_port(value);
  36   2        }
  37   1      }
  38          
  39          
  40          void Init_Timer()
  41          {
  42   1        TMOD = 0x22;             //???0,1???2
  43   1        AUXR = AUXR | 0x80;          //
  44   1        AUXR = AUXR | 0x40;
  45   1        TH0 = 245;
  46   1        TH1 = 252;
  47   1      
  48   1        WAKE_CLKO = WAKE_CLKO | 0X03;    //
  49   1        EA = 1;     //?????
  50   1      
  51   1        //???????
  52   1        TR1 = 1;
  53   1        //ET0=1;
  54   1      }
C51 COMPILER V9.00   PCM1801                                                               11/24/2015 18:00:11 PAGE 2   

  55          
  56          void Init_pca()
  57          {
  58   1        CMOD = 0x02;         //   ??????????PCA FOSC / 2
  59   1        //   ??PCA???????
  60   1        CCON = 0x00;             //  ??PCA?????
  61   1        //   PCA???????
  62   1        //   ??CF???
  63   1        //    ??????????
  64   1        //   ??PCA???
  65   1        CL = 0;
  66   1        CH = 0;
  67   1        CCAPM0 = 0x4d;      //  PCA??0???16??????
  68   1        val = T128KHz;
  69   1        CCAP0L = val;
  70   1        CCAP0H = val >> 8;    //   ??PCA??0
  71   1        val += T128KHz;
  72   1        EA = 1;
  73   1        CR = 1;         //  PCA???????
  74   1      }
  75          
  76          void PCA_isr() interrupt 7 using 1
  77          {
  78   1        
  79   1        CCF0 = 0x00;                    //   ??????
  80   1        CCAP0L = val;
  81   1        CCAP0H = val >> 8;    //   ??PCA??0
  82   1        val += T128KHz;
  83   1        L3 = ~L3;
  84   1      
  85   1        // SPISS = 0; 
  86   1        //pull low slave SS
  87   1        //    if(line_up ==1)
  88   1        {
  89   2          spi_c = 1;
  90   2          value = 0;
  91   2          SPDAT = 0x55;                //trigger SPI send
  92   2        }
  93   1      
  94   1        // SPISS = 1;                  //push high slave SS
  95   1      }
  96          
  97          void InitSPI()
  98          {
  99   1        SPDAT = 0;                  //initial SPI data
 100   1        SPSTAT = SPIF | WCOL;       //clear SPI status
 101   1      #ifdef MASTER
 102   1        SPCTL = SPEN | MSTR | SPDH | CPOL | CPHA;        //master mode
 103   1      #else
                SPCTL = SPEN;               //slave mode
              #endif
 106   1      }
 107          
 108          void PCM1801_Init()
 109          {
 110   1        Init_Timer();
 111   1        Init_pca();
 112   1        InitSPI();
 113   1        IE2 |= ESPI;
 114   1      }


C51 COMPILER V9.00   PCM1801                                                               11/24/2015 18:00:11 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    252    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
