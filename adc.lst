C51 COMPILER V9.00   ADC                                                                   11/27/2015 17:18:28 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN adc.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Recoder\adc.c LARGE BROWSE INCDIR(.\Recoder) DEBUG OBJECTEXTEND PRINT(.\adc
                    -.lst) TABS(2) OBJECT(adc.obj)

line level    source

   1          #include "adc.h"
   2          #include "usart.h"
   3          #include "wch372.h"
   4          
   5          uint16_t sum_adc_value = 0;
   6          uint8_t  tel_state = 2;
   7          
   8          void InitADC()
   9          {
  10   1        P1ASF = 0x03;                   //Open 8 channels ADC function
  11   1        ADC_RES = 0;                    //Clear previous result
  12   1        ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  13   1        Delay(2);                       //ADC power-on and delay
  14   1      }
  15          
  16          unsigned char GetADCResult(BYTE ch)
  17          {
  18   1        ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
  19   1        _nop_();                        //Must wait before inquiry
  20   1        _nop_();
  21   1        _nop_();
  22   1        _nop_();
  23   1        while (!(ADC_CONTR & ADC_FLAG));//Wait complete flag
  24   1        ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  25   1      
  26   1        return ADC_RES;                 //Return ADC result
  27   1      }
  28          
  29          void Delay(WORD n)
  30          {
  31   1        WORD x;
  32   1      
  33   1        while (n--)
  34   1        {
  35   2          x = 5000;
  36   2          while (x--);
  37   2        }
  38   1      }
  39          
  40          unsigned char GetADCResult_av(BYTE ch)
  41          {
  42   1        unsigned char temp = 0, value = 0, i = 0;
  43   1        for (i = 0; i<16; i++)
  44   1        {
  45   2          value = GetADCResult(ch);
  46   2          sum_adc_value += value;
  47   2        }
  48   1      
  49   1        temp = (unsigned char)(sum_adc_value >> 4);
  50   1        sum_adc_value = 0;
  51   1        return temp;
  52   1      }
  53          
  54          void tel_state_process(void) //1 挂机   2无线路  3摘机  
C51 COMPILER V9.00   ADC                                                                   11/27/2015 17:18:28 PAGE 2   

  55          {
  56   1        unsigned char adc_temp = 0;
  57   1        adc_temp = GetADCResult_av(0);
  58   1        if (adc_temp > 200 && tel_state != 1 && P41 == 1)
  59   1        {
  60   2          wch372_send2byte(0xA1, 0x01, 0x01);
  61   2          tel_state = 1;
  62   2      #ifdef DEBUG
  63   2          uart_printf("the telephone is offline \r\n");
  64   2      #endif
  65   2        }
  66   1        else if (adc_temp < 10 && tel_state != 2 && P41 == 1)
  67   1        {
  68   2          wch372_send2byte(0xA1, 0x01, 0x02);
  69   2          tel_state = 2;
  70   2      #ifdef DEBUG
  71   2           uart_printf("no telephone \r\n");
  72   2      #endif
  73   2        }
  74   1        else if (adc_temp >20 && adc_temp < 40 && tel_state != 3 && P41 == 1)
  75   1        {
  76   2          wch372_send2byte(0xA1, 0x01, 0x03);
  77   2          tel_state = 3;
  78   2      #ifdef DEBUG
  79   2          uart_printf("the telephone is online \r\n");
  80   2      #endif
  81   2        }
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =     71    ----
   XDATA SIZE       =      3       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
